/* globals cpcBasic */

"use strict";

cpcBasic.addItem("", function () { /*
1 rem basicode - BasiCode Library
2 rem (c) S.Simons, M.van der Meer
3 rem http://www.basicode.de/download/cpc.zip (BC3.ASC)
4 rem Modifications: call &bbde; no hidden machine code
5 BORDER 0:INK 0,0:INK 1,26
6 RANDOMIZE TIME:RAD
10 GOTO 999:REM BASICODE-3 SUBS V4.1 19-2 '89 (C) S.Simons, M.van der Meer
20 CLS:CLEAR:IF PEEK(&AE64)=&6F THEN SCRMODE=&B7C3 ELSE SCRMODE=&B1C8
21 poke SCRMODE,0: IF PEEK(SCRMODE)=0 OR PEEK(SCRMODE)=2 THEN MODE 1
22 poke SCRMODE,1: IF PEEK(SCRMODE)=1 THEN HO=39:VE=24:HG=270:VG=200:WINDOW #1,1,40,25,25
24 SV=7:OG=0:reading=&9E3F:writing=&9E00:GOTO 1009
100 CLS:RETURN
110 IF HO<0 THEN 115
111 IF VE<0 THEN 116
112 IF HO>39 AND HG<>540 THEN 117
113 IF VE>25 THEN 118
114 LOCATE INT(HO+1),INT(VE+1):RETURN
115 PRINT #1,CHR$(7):PRINT #1,"HO too low!":RETURN
116 PRINT #1,CHR$(7):PRINT #1,"VE too low!":RETURN
117 PRINT #1,CHR$(7):PRINT #1,"HO too high!":RETURN
118 PRINT #1,CHR$(7):PRINT #1,"VE too high!":RETURN
120 HO=POS(#0)-1:VE=VPOS(#0)-1:RETURN
150 PRINT" "CHR$(24)"  "SR$"  "CHR$(24)" ";:RETURN
200 IN=0:IN$=INKEY$:IF IN$<>"" THEN 211 ELSE RETURN      
210 GOSUB 200:IF IN$="" THEN 210 ELSE RETURN
211 IN=ASC(IN$)
212 IF IN=242 THEN IN=28
213 IF IN=243 THEN IN=29
214 IF IN=241 THEN IN=30
215 IF IN=240 THEN IN=31
216 IF IN>96 AND IN<127 THEN IN=IN-32
217 IF IN=127 THEN GOSUB 120:IF HO>0 THEN IN$=CHR$(8)+CHR$(16) ELSE IN$=CHR$(9)+CHR$(9):IN$=IN$+IN$+IN$+IN$:IN$=IN$+IN$+IN$+IN$+IN$+CHR$(16)
219 RETURN
220 IF HO<0 OR HO>39 THEN IN=0:RETURN
222 IF VE<0 OR VE>24 THEN IN=0:RETURN
224 LOCATE INT(HO+1),INT(VE+1):CALL &179:IN=ASC(UPPER$(CHR$(PEEK(&177))))
225 IF IN=143 THEN IN=32
226 IF IN$="" THEN IN$=" "
227 GOTO 216
250 SOUND 2,100,10,15:RETURN
260 RV=RND:RETURN
270 FR=FRE(""):RETURN
280 IF FR=0 THEN ON BREAK STOP:RETURN
281 IF FR=1 THEN ON BREAK CONT:RETURN
300 SR$=STR$(SR):IF SR>=0 THEN SR$=MID$(SR$,2)
301 RETURN
310 IF CN=0 THEN SR$=DEC$(SR,STRING$(CT,"#")) ELSE SR$=DEC$(SR,STRING$(CT-CN-1,"#")+"."+STRING$(CN,"#"))
311 IF LEFT$(SR$,1)="%" THEN SR$=STRING$(CT,"*")
312 RETURN
313 OD$=MID$(STR$(OD),3,CN+1)
314 IF LEN(OD$)<CN+1 THEN OD$=OD$+"0":GOTO 314
315 SR$=MID$(STR$(OI),2)+OD$:IF SR<0 AND VAL(SR$)<>0 THEN SR$="-"+SR$
316 IF LEN(SR$)<CT THEN SR$=" "+SR$:GOTO 316
317 IF LEN(SR$)>CT OR OS>=1E+09 THEN SR$=STRING$(CT,"*")
318 RETURN
330 FOR OF=1 TO LEN(SR$)
331 IF ASC(MID$(SR$,OF,1))>95 THEN GOSUB 340
332 NEXT OF
333 RETURN
340 OSR=ASC(MID$(SR$,OF,1))-32
341 SR$=LEFT$(SR$,OF-1)+CHR$(OSR)+MID$(SR$,OF+1)
342 RETURN
350 PRINT#8,SR$;:RETURN
360 PRINT#8:RETURN
400 OP=SP:ODUUR=SD:OV=SV
401 IF SP<11 THEN OP=11 ELSE IF SP>112 THEN OP=112
403 IF SD<1 THEN ODUUR=1 ELSE IF SD>255 THEN ODUUR=255
405 IF SV<0 THEN OV=0 ELSE IF SV>15 THEN OV=15
410 OCTAAF=FIX(OP/12)-5
411 OKN=OP-(FIX(OP/12)*12)+1
412 FREQ=440*(2^(OCTAAF+((OKN-10)/12)))
413 PERIOD=ROUND(62500/FREQ)
414 IF SD=0 THEN RETURN
415 IF sv=0 THEN ENV 1,10,0,10 ELSE ENV 1,1,127,OV
420 SOUND 7,PERIOD,ODUUR*10,OV,1
425 WHILE (SQ(1) AND 128):call &bd19:WEND:RETURN
430 RETURN
450 OTIME=TIME
451 OSD=SD*30
452 call &bd19: GOSUB 200:IF IN=0 THEN 453 ELSE 454
453 IF OSD>TIME-OTIME THEN 452 ELSE 457
454 SD=INT((TIME-OTIME)/30)
455 RETURN
457 SD=0:GOTO 455
500 IF PEEK(&9E20)<>&7E THEN PRINT"Load machinecode!!!": 'END
501 ON NF+1 GOTO 502,510,515,520,516,521,516,521
502 PRINT #1,"Put cassette in datacorder, press ENTER";:CALL &BB18:CLS #1
503 PRINT  #1,"Press PLAY and ENTER...";:CALL &BB18:CLS #1
505 IN=0:CALL reading:GOSUB 594:OA=&9601
506 IF PEEK(&9600)>128 THEN 507 ELSE 508
507 PRINT #1,"Rewind, press PLAY and ENTER...";:CALL &BB18:CLS #1:GOTO 505
508 IF IN=-1 THEN PRINT#1,"Read error in block";PEEK(&9600)-&80 ELSE PRINT#1,"No errors in block";PEEK(&9600)-&80
509 FOR f=1 TO 1000:NEXT:CLS#1:RETURN
510 POKE &9600,0:OA=&9601:IN=0
511 PRINT #1,"Put cassette in datacorder, press ENTER";:CALL &BB18:CLS #1
512 PRINT #1,"Press REC, PLAY and ENTER...";:CALL &BB18:CLS #1
514 RETURN
515 IF PEEK(&AE64)=&6F THEN |TAPE.IN
516 OPENIN NF$:INPUT#9,OBESTAND$:IN=0:RETURN
520 IF PEEK(&AE64)=&6F THEN |TAPE.OUT
521 PRINT NF$:OPENOUT NF$:IN=0:RETURN
540 IN$="":IN=1:ON (NF+2)/2 GOTO 541,551,551,551
541 IF OA=&9A01 AND PEEK(OA)=3 THEN 542 ELSE 544
542 CALL reading:GOSUB 594:OA=&9601
543 IF IN=-1 THEN PRINT#1,"Errors in block";PEEK(&9600)-&80 ELSE PRINT#1,"No errors in Block";PEEK(&9600)-&80
544 OA$=CHR$(PEEK(OA)):IF PEEK(OA)=13 THEN 549
545 IF PEEK(OA)=4 THEN IN=1
546 IF PEEK(OA)=4 THEN 559
547 IF ((PEEK(OA)>126) OR (PEEK(OA)<32)) THEN OA$="#"
548 IN$=IN$+OA$:OA=OA+1:GOTO 541
549 OA=OA+1:IF PEEK(OA)=4 THEN IN=1:RETURN
550 IN=0:RETURN
551 IN$=OBESTAND$:IF EOF THEN 559 ELSE LINE INPUT #9,OBESTAND$
552 IF OBESTAND$<>"" THEN OU$=MID$(OBESTAND$,1,1):IF ASC(OU$)=26 THEN OBESTAND$="":IN=1:RETURN
553 IF EOF THEN 559
554 IN=0:RETURN
559 PRINT#1,"End of file":IN=1:RETURN
560 IN=1:ON (NF+1)/2 GOTO 561,575,575,575
561 FOR OF=1 TO LEN(SR$)
562 OA$=MID$(SR$,OF,1):POKE OA,ASC(OA$)
563 OA=OA+1:IF OA=&9A01 THEN 566
564 NEXT OF
565 POKE OA,13:OA=OA+1:IN=0:IF OA=&9A01 THEN 570 ELSE RETURN
566 POKE OA,3:REST$=RIGHT$(SR$,LEN(SR$)-OF):POKE OA+1,255:CALL writing
567 POKE &9600,PEEK(&9600)+1:OA=&9601
568 IF REST$="" THEN POKE OA,13:OA=OA+1:RETURN  
569 FOR OF=1 TO LEN(REST$):OA$=MID$(REST$,OF,1):POKE OA,ASC(OA$):OA=OA+1:NEXT OF:POKE OA,13:OA=OA+1:RETURN
570 POKE OA,3:POKE OA+1,255:CALL writing:POKE &9600,PEEK(&9600)+1:OA=&9601:RETURN
575 PRINT#9,SR$:IN=0:RETURN
580 CLS #1:ON NF+1 GOTO 582,585,590,592,591,593,591,593
582 RETURN
585 POKE OA,4:OA=OA+1
586 IF OA=&9A01 THEN 589
587 IF OA=&9A01 THEN 589
588 POKE OA,4:OA=OA+1:GOTO 586
589 POKE OA,3:POKE OA+1,255:CALL writing:RETURN
590 IF PEEK(&AE64)=&6F THEN GOSUB 591:|DISC.IN:RETURN
591 CLOSEIN:RETURN     
592 IF PEEK(&AE64)=&6F THEN GOSUB 593:|DISC.OUT:RETURN
593 PRINT#9,CHR$(26):PRINT#9,CHR$(26):CLOSEOUT:RETURN 
594 FOR OF=1 TO 2
595 IF PEEK(&9A02)<>PEEK(&9ED7) THEN 596 ELSE 599
596 PRINT#1,"Error, rewind and press ENTER":CALL &BB18:CLS#1:PRINT#1,"Press PLAY and ENTER":CALL &BB18:CLS #1:CALL reading
597 NEXT OF
598 IF PEEK(&9A02)<>PEEK(&9ED7) THEN IN=-1
599 RETURN
600 CLG:ORIGIN 50,399:MOVE 0,0:RETURN
601 IF HO<0 THEN OG$="HO too low!":OG=1
602 IF VE<0 THEN OG$="VE too low!":OG=1
603 IF HO=1 OR HO>1 THEN OG$="HO too high!":OG=1
604 IF VE=1 OR VE>1 THEN OG$="VE too high!":OG=1
605 RETURN
620 GOSUB 601:IF OG=1 THEN 622
621 PLOT INT(HO*540),-INT(VE*400),ABS(CN-1):RETURN
622 PRINT #1,OG$:SOUND 2,100,10,15:OG=0:RETURN
630 GOSUB 601:IF OG=1 THEN 632
631 DRAW INT(HO*540),-INT(VE*400),ABS(CN-1):RETURN
632 PRINT #1,OG$:SOUND 2,100,10,15:OG=0:RETURN
650 GOSUB 601:TAG:MOVE INT(HO*540),-INT(VE*400)
651 IF CN=0 THEN CALL &BBDE,1
652 IF CN=1 THEN CALL &BBDE
653 PRINT SR$;:TAGOFF:RETURN
950 CLS:CLEAR:END
981 '98x line not used:
982 'MEMORY &9200-1:LOAD"!bc3bin.bin":CALL &A585:|HELP
983 rem hex &170-&196: 27 00 00 00 C5 20 20 37 20 CD 60 BB 32 77 01 C9 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 00
998 rem
999 rem
1009 rem
*/ });
